{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Deploys Azure Storage Account with Static Website hosting for SharePoint Download Monitoring Dashboard",
    "author": "Ofir Gavish & Eitan Talmi"
  },
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Storage Account"
      },
      "minLength": 3,
      "maxLength": 24
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "enableCdn": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Azure CDN for better performance"
      }
    }
  },
  "variables": {
    "cdnProfileName": "[concat(parameters('storageAccountName'), '-cdn')]",
    "cdnEndpointName": "[concat(parameters('storageAccountName'), '-endpoint')]",
    "staticWebsiteIndexDocument": "index.html",
    "staticWebsiteErrorDocument": "error.html"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": true,
        "minimumTlsVersion": "TLS1_2",
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": ["*"],
              "allowedMethods": ["GET", "HEAD", "POST", "PUT", "DELETE", "OPTIONS"],
              "maxAgeInSeconds": 3600,
              "exposedHeaders": ["*"],
              "allowedHeaders": ["*"]
            }
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/$web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/data')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    },
    {
      "condition": "[parameters('enableCdn')]",
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2023-05-01",
      "name": "[variables('cdnProfileName')]",
      "location": "Global",
      "sku": {
        "name": "Standard_Microsoft"
      }
    },
    {
      "condition": "[parameters('enableCdn')]",
      "type": "Microsoft.Cdn/profiles/endpoints",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('cdnProfileName'), '/', variables('cdnEndpointName'))]",
      "location": "Global",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "originHostHeader": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.web,'https://',''),'/','')]",
        "isHttpAllowed": false,
        "isHttpsAllowed": true,
        "queryStringCachingBehavior": "IgnoreQueryString",
        "origins": [
          {
            "name": "origin1",
            "properties": {
              "hostName": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.web,'https://',''),'/','')]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "primaryWebEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.web]"
    },
    "cdnEndpoint": {
      "condition": "[parameters('enableCdn')]",
      "type": "string",
      "value": "[if(parameters('enableCdn'), concat('https://', variables('cdnEndpointName'), '.azureedge.net'), '')]"
    },
    "storageAccountKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
    },
    "deploymentInstructions": {
      "type": "string",
      "value": "Your Azure Storage account has been created successfully! Next steps: 1) Configure your PowerShell scripts with the provided storage account details, 2) Upload the dashboard files to the $web container, 3) Set up your Azure Automation runbook."
    }
  }
}